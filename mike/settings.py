"""
Django settings for mike project.

Generated by 'django-admin startproject' using Django 2.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

from decouple import config
import os
import json

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("MIKE_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("MIKE_DEBUG") == "1"

ALLOWED_HOSTS = config("MIKE_ALLOWED_HOSTS", default="localhost", cast=lambda v: [s.strip() for s in v.split(',')])


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
	'rest_framework',
	'rest_framework.authtoken',
	'phonenumber_field',
	'storages',
	
	'core',
	'accounts',
]

AUTH_USER_MODEL = 'accounts.User'
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
	'accounts.authentication.EmailUsernameAuthentication',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mike.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mike.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.postgresql',
		'NAME': config("MIKE_POSTGRES_DB_NAME"),
		'USER': config("MIKE_POSTGRES_USERNAME"),
		'PASSWORD': config("MIKE_POSTGRES_PASSWORD"),
		'HOST': 'localhost',
		'PORT': '',
	}
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# REST Framework Settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.TokenAuthentication',
		'rest_framework.authentication.SessionAuthentication',
		#'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
    ),
	'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
	'PAGE_SIZE': 10,
	'DEFAULT_PERMISSION_CLASSES': [
		#'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
		'rest_framework.permissions.AllowAny',
	],
}

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Los_Angeles'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOGIN_REDIRECT_URL = '/'

# Phone Number Settings
PHONENUMBER_DEFAULT_REGION = 'US'
PHONENUMBER_DB_FORMAT = 'E164'

# Email Settings
#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_SSL = True
EMAIL_HOST = config("MIKE_EMAIL_HOST")
EMAIL_PORT = config("MIKE_EMAIL_PORT")
EMAIL_HOST_USER = config("MIKE_EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = config("MIKE_EMAIL_HOST_PASSWORD")


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

# AWS S3 Settings
AWS_ACCESS_KEY_ID = config("MIKE_AWS_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = config("MIKE_AWS_SECRET_ACCESS_KEY")
AWS_S3_REGION_NAME = config("MIKE_AWS_S3_REGION_NAME")
AWS_S3_URL_PROTOCOL = config("MIKE_AWS_S3_URL_PROTOCOL")

# S3 General Files
AWS_STORAGE_BUCKET_NAME = config("MIKE_AWS_STORAGE_BUCKET_NAME")
AWS_S3_CUSTOM_DOMAIN = '%s.s3-us-west-2.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
AWS_DEFAULT_ACL = None if config("MIKE_AWS_DEFAULT_ACL") == "None" else config("MIKE_AWS_DEFAULT_ACL")
AWS_S3_OBJECT_PARAMETERS = json.loads(config("MIKE_AWS_S3_OBJECT_PARAMETERS").replace("\'", "\""))

# Placeholder for media assets
AWS_MEDIA_LOCATION = config("MIKE_AWS_MEDIA_LOCATION")
AWS_STATIC_LOCATION = config("MIKE_AWS_STATIC_LOCATION")

# CloudFront Settings
CLOUDFRONT_URL = config("MIKE_CLOUDFRONT_URL")
CLOUDFRONT_KEY_ID = config("MIKE_CLOUDFRONT_KEY_ID")
CLOUDFRONT_PK_FILE_NAME = os.path.join(BASE_DIR, 'mike', config("MIKE_CLOUDFRONT_PK_FILE_NAME"))

# Static files setting
STATICFILES_DIRS = [
	os.path.join(BASE_DIR, 'static'),
	#'/var/www/static/',
]
#STATIC_URL = '/static/'
STATIC_URL = 'https://%s/%s/' % (AWS_S3_CUSTOM_DOMAIN, AWS_STATIC_LOCATION)
STATICFILES_STORAGE = 'mike.storage_backends.StaticStorage'

# Media Settings
#MEDIA_URL = '/media/'
#MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = 'https://%s/%s/' % (AWS_S3_CUSTOM_DOMAIN, AWS_MEDIA_LOCATION)
DEFAULT_FILE_STORAGE = 'mike.storage_backends.AWSMediaStorage'



